#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: ingress

Usage:
  ingress FLOW [FILE ...] [OPTIONS]

Options:
  -t, --trace                       (Disabled) Trace the file(s) through the system
  -m, --content-type [CONTENT_TYPE] Set media type on ingress
  -h, --help                        Show help"
  exit 1
}

TMPFILE="/tmp/.deltafi-ingress.$$"

cleanup() {
  rm -f $TMPFILE
  exit
}

trap cleanup INT

CONTENT_TYPE="application/octet-stream"
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -t|--trace)
      TRACE=false
      cli_log "${yellow}Tracing disabled${normal}"
      shift # past argument
      ;;
    -c|--content-type)
      shift
      CONTENT_TYPE=$1
      shift
      ;;
    -h|--help)
      cli_help_command
      shift # past argument
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters
ARGS=($@)
[[ ${#ARGS[@]} -lt 3 ]] && cli_help_command

FLOW=$2
INGRESS_HOST=$(deltafi serviceip deltafi-ingress-service)
INGRESS_PATH="/deltafile/ingress"
INGRESS_URL="http://${INGRESS_HOST}${INGRESS_PATH}"

get_stage() {
  local did=$1
  local query="query { deltaFile(did: \"$did\") { stage } }"
  local stage=$(deltafi query "$query" | jq -r '.data.deltaFile.stage')
  echo $stage
}

# ingress all files one at a time
for FILE in "${@:3}"; do
  if [ ! -f "$FILE" ]; then
    cli_log "${yellow}${FILE}: No such file${normal}"
    continue
  fi

  BASENAME=$(basename $FILE)
  cli_log "Ingressing file ${cyan}${BASENAME}${normal} to flow ${cyan}${FLOW}${normal}"

  truncate -s 0 ${TMPFILE}
  RESPONSE_CODE=$(cat ${FILE} | curl -s -X POST -o ${TMPFILE} -w "%{http_code}" --data-binary @- \
    -H "Content-Type: $CONTENT_TYPE" -H "$PERMISSION" -H "$CLI_USER" -H "Filename: ${BASENAME}" -H "Flow: ${FLOW}" ${INGRESS_URL})

  if [[ "$RESPONSE_CODE" != "200" ]]; then
    cli_log "${red}Ingress failed for file ${bold}${BASENAME}${normal}"
    echo -e "${red}${RESPONSE_CODE} Error: $(cat ${TMPFILE})${normal}"
  else
    DID=$(cat ${TMPFILE})
    if [[ $TRACE ]]; then
      stage="$(get_stage $DID)"
      until [ "$stage" == "COMPLETE" ]; do
        ((tries++)) && ((tries>=20)) && break
        sleep 0.1
        stage="$(get_stage $DID)"
      done

      if [ "$stage" != "COMPLETE" ]; then
        cli_log "${red}Ingress failed for file ${bold}${BASENAME}${normal}${red} with did ${bold}${DID}${normal}"
        echo -e "${red}Error: Timeout reached waiting for stage \"COMPLETE\"${normal}"
        deltafi trace $DID
        continue
      else
        cli_log "Ingress complete for file ${cyan}${BASENAME}${normal} with did ${cyan}${DID}${normal}"
        deltafi trace $DID
      fi
    else
      cli_log "Ingress complete for file ${cyan}${BASENAME}${normal} with did ${cyan}${DID}${normal}"
    fi
  fi
done

cleanup
