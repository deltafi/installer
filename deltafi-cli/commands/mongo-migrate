#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: mongo-migrate

Usage:
  mongo-migrate"
  exit 1
}

TMPFILE="/tmp/.ui-config.$$"

cleanup() {
  rm -f $TMPFILE
  exit
}

trap cleanup INT

MIGRATION_DIR="/tmp/migrations"

ARGS=($@)
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command

MONGODB_USERNAME_ENV='$MONGODB_USERNAME'
MONGODB_PASSWORD_ENV='$MONGODB_PASSWORD'

_k8s_mongo_migrate() {
  POD=$(${KUBECTL_BIN} get pod -l app.kubernetes.io/name=mongodb -o jsonpath="{.items[0].metadata.name}")
  ${KUBECTL_BIN} exec -i ${POD} --container mongodb -- sh -c "rm -rf ${MIGRATION_DIR}"
  ${KUBECTL_BIN} cp --container mongodb ${DELTAFI_DIR}/migrations ${POD}:/tmp/

  for i in ${DELTAFI_DIR}/migrations/*.js; do
    migration_name=$(basename ${i})
    migration_file="${MIGRATION_DIR}/$migration_name"
    # Always print running here since the script will block output until it is complete - the script will print a skipped message if this has already run
    cli_log "Running database migration $(basename ${i})"
    cli_log "$(${KUBECTL_BIN} exec -i ${POD} --container mongodb -- sh -c "MIGRATION_NAME=${migration_name} MIGRATION_FILE=${migration_file} mongosh --username ${MONGODB_USERNAME_ENV} --password ${MONGODB_PASSWORD_ENV} --quiet deltafi --file ${MIGRATION_DIR}/runner/run-migrations.js")"
  done
}

_compose_mongo_migrate() {
  docker exec -i -u="$(id -u):$(id -g)" deltafi-mongodb sh -c "rm -rf ${MIGRATION_DIR}"
  docker cp -q ${DELTAFI_DIR}/migrations deltafi-mongodb:/tmp/

  for i in ${DELTAFI_DIR}/migrations/*.js; do
    migration_name=$(basename ${i})
    migration_file="${MIGRATION_DIR}/$migration_name"
    # Always print running here since the script will block output until it is complete - the script will print a skipped message if this has already run
    cli_log "Running database migration $(basename ${i})"
    cli_log "$(docker exec -i deltafi-mongodb sh -c "MIGRATION_NAME=${migration_name} MIGRATION_FILE=${migration_file} mongosh --username ${MONGODB_USERNAME_ENV} --password ${MONGODB_PASSWORD_ENV} --quiet deltafi --file ${MIGRATION_DIR}/runner/run-migrations.js")"
  done
}

if _is_standalone; then
  _compose_mongo_migrate
else
  _k8s_mongo_migrate
fi

cleanup