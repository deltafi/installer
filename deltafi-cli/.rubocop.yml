# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://github.com/rubocop-hq/rubocop/blob/master/manual/configuration.md
AllCops:
  TargetRubyVersion: 2.7

require: rubocop-performance

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

Layout/LineLength:
  Enabled: false

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: false

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/MixedRegexpCaptureTypes:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Metrics:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false

Performance/AncestorsInclude:
  Enabled: true

Performance/BigDecimalWithNumericArgument:
  Enabled: true

Performance/RedundantSortBlock:
  Enabled: true

Performance/RedundantStringChars:
  Enabled: true

Performance/ReverseFirst:
  Enabled: true

Performance/SortReverse:
  Enabled: true

Performance/Squeeze:
  Enabled: true

Performance/StringInclude:
  Enabled: true

Style/ClassVars:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/ExponentialNotation:
  Enabled: true

Style/GlobalVars:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/MixinUsage:
  Enabled: false

Style/MultilineBlockChain:
  Enabled: false

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/RedundantReturn:
  Enabled: false

Style/SlicingWithRange:
  Enabled: true

Style/ModuleFunction:
  Enabled: false

